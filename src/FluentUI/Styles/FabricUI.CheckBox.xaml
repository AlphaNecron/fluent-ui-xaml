<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fabric.styles="clr-namespace:FluentUI.Styles"
                    xmlns:fabric="clr-namespace:FluentUI">

    <!--<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>-->
    <Style x:Key="FabricEmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Resource dictionary entries should be defined here. -->
    <Style x:Key="FabricCheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="Black" SnapsToDevicePixels="true" Margin="14,0,0,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FabricCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="TextElement.Foreground" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Neutral.Gray160}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FabricCheckRadioFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Neutral.White}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border 
                            x:Name="bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            HorizontalAlignment="Center" 
                            CornerRadius="1"
                            Height="20" 
                            Width="20">
                            <Grid>
                                <fabric:FabricIcon
                                    x:Name="checkMark"
                                    Icon="CheckMark"
                                    Foreground="{StaticResource Neutral.White}"
                                    Visibility="Hidden"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"/>
                                <fabric:FabricIcon
                                    x:Name="checkMarkDark"
                                    Icon="CheckMark"
                                    Foreground="{StaticResource Neutral.Gray120}"
                                    Visibility="Hidden"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"/>                                
                            </Grid>
                        </Border>
                        <TextBlock 
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Text="{TemplateBinding fabric:FabricExtra.ErrorMessage}"
                            Padding="1,5,0,0" 
                            FontSize="12"
                            Foreground="{StaticResource Shared.SharedRed20}"
                            Visibility="{TemplateBinding fabric:FabricExtra.ErrorMessage, Converter={StaticResource NullToVisibilityConverter}}"/>
                        <ContentPresenter 
                            Grid.Column="2"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="checkMarkDark" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="bd" Value="{StaticResource Communication.CommunicationShade20}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="{StaticResource Communication.CommunicationPrimary}"/>
                            <Setter Property="Visibility" TargetName="checkMark" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="bd" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="bd" Value="{StaticResource Communication.CommunicationShade20}"/>
                            <Setter Property="Visibility" TargetName="checkMark" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="bd" Value="0"/>
                        </MultiTrigger>                        
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FabricCheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Background" TargetName="bd" Value="{StaticResource Neutral.Gray20}"/>
                            <Setter Property="Foreground" Value="{StaticResource Neutral.Gray90}"/>
                            <Setter Property="Visibility" TargetName="checkMark" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Value="true">
                            <DataTrigger.Binding>
                                <Binding Path="(fabric:FabricExtra.ErrorMessage)" RelativeSource="{RelativeSource Self}" Converter="{StaticResource InverseNullToBoolConverter}"/>
                            </DataTrigger.Binding>
                            <Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource Shared.SharedRed20}"/>
                            <Setter Property="BorderThickness" TargetName="bd" Value="1"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>