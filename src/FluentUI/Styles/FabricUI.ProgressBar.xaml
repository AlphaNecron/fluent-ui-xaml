<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fabric.styles="clr-namespace:FluentUI.Styles"
                    xmlns:fabric="clr-namespace:FluentUI"
                    
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FabricUI.Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="Communication.HorizontalGradientCommunicationPrimary" StartPoint="0.0,0.5" EndPoint="1.0,0.5">
        <GradientStop Offset="0.0" Color="#000078d4"/>
        <GradientStop Offset="0.3" Color="#0078d4"/>
        <GradientStop Offset="0.7" Color="#0078d4"/>
        <GradientStop Offset="1.0" Color="#000078d4"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Communication.VerticalGradientCommunicationPrimary" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
        <GradientStop Offset="0.0" Color="#000078d4"/>
        <GradientStop Offset="0.3" Color="#0078d4"/>
        <GradientStop Offset="0.7" Color="#0078d4"/>
        <GradientStop Offset="1.0" Color="#000078d4"/>
    </LinearGradientBrush>

    <!-- Fabric UI ProgressBar Style -->
    <Style x:Key="FabricProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource Communication.CommunicationPrimary}"/>
        <Setter Property="Background" Value="{StaticResource Neutral.Gray30}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-1.0,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:0.6" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.2" Value="2.0,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{StaticResource Communication.HorizontalGradientCommunicationPrimary}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="MinHeight" Value="4"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="MinWidth" Value="4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>